version: "3.7"
services:
  antifraud:
    build:
      context: .
      dockerfile: ./apps/antifraud/Dockerfile
      target: development
    command: dockerize -wait tcp://kafka:29092 -timeout 60s npm run start:dev antifraud
    depends_on:
      - kafka
      - postgres
    restart: always
    volumes:
      - .:/usr/src/app
  transactions:
    build:
      context: .
      dockerfile: ./apps/transactions/Dockerfile
      target: development
    command: dockerize -wait tcp://kafka:29092 -timeout 60s npm run start:dev transactions
    depends_on:
      - kafka
      - postgres
    restart: always
    ports:
      - '3002:3002'
    volumes:
      - .:/usr/src/app

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092
